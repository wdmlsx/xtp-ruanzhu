syntax = "proto3";
package api;
option java_package = "org.onosproject.protocol.sptn.proto.api";
// 34所与比特统型版本 v1.0 2019/11/13

enum val_interval {   // OAM CC间隔
	INTERVAL_INVALID = 0;    // 未赋值
	MS_3DOT3         = 1;    // 3.3毫秒
	MS_10            = 2;    // 10毫秒
	MS_100           = 3;    // 100毫秒
	SECOND_1         = 4;    // 1秒
	SECOND_10        = 5;    // 10秒
	MINUTE_1         = 6;    // 1分钟
	MINUTE_10        = 7;    // 10分钟
};

enum enable_sel {    // 使能开关
    SEL_INVALID = 0;   // 未赋值
    SEL_ENABLE  = 1;   // 使能
    SEL_DISABLE = 2;   // 关闭
}

enum thr_exceed { // 超出阈值告警
    THR_NOT_EXCEED = 0;   // 未超出阈值
    THR_EXCEED     = 1;   // 超出阈值
}



// ================ TP-OAM ================
// 比特需要使用megid作为OAM ID, megid, mepid, rmepid由控制器分配（TP-OAM配置不向用户呈现）规则如下：
// megid    唯一标识一条OAM，每个端到端的OAM唯一分配不重复的ID就可以了，范围[1, 1000]
// mepid    标识MEG内的mep，每个MEG内的MEP和RMEP ID不重复，可以用1和2
// rmepid   在MEG内唯一，同一个MEG内不能与mep id重复，范围与mep id相同

// ccm固定使能，P节点固定使能MIP, lm/dm固定使能
// dm固定使用2-way模式，通过dmm&dmr避免时钟同步问题
// lm固定使用dual-ended lm，和ccm在一起的，避免on-demand模式需要双方软件参与

message tbl_oam
{
    string megid  = 1;     //不超过13字符，比特填整数字符串
    uint32 mepid  = 2;
    uint32 rmepid = 3;
    uint32 level  = 4;     // 固定7
    
    //Read write
    val_interval interval = 5;   // 默认3.3ms
    uint32 exp            = 6;   // 范围: 1~8, 0: 无配置
    enable_sel ccm_en     = 7;   // ccm 固定使能
    //uint32 mip_en       = 8;   // P节点固定使能MIP，mip_en开关不用
    
	// lm, dm阈值：触发告警，保护组倒换
    uint32 dmthreshold    = 8;   // DM时延越限告警值(us)，默认10000000
    enable_sel dm_en      = 9;   // dm固定使能
    uint32 lm_threshold   = 10;  // LM双端丢包越限告警值（0~100，默认100）
    enable_sel lm_en      = 11;  // lm固定使能
}


// ================ UNI CFM ================

enum cfm_event_type
{
    INVALID_CFM_EVENT_TYPE = 0;
    LOC = 1;    //LOC告警
    RDI = 2;    //RDI告警
    AIS = 3;    //AIS告警 
    
    MAC_STATUS_CHANGE = 4;          //MAC状态改变
	SRC_MAC_MISMATCH  = 5;          //远端MEP MAC不匹配
	MISMERGE          = 6;          //MEG不匹配
	UNEXPECTED_LEVEL  = 7;          //等级不匹配
	UNEXPECTED_MEP    = 8;          //MEP不匹配
	UNEXPECTED_PERIOD = 9;          //周期不匹配
	CFM_OK            = 10;         //告警恢复
}

message def_accfm_key
{
    uint32 level = 1;
    uint32 vlan  = 2;
    string port  = 3;  // 端口名统一用string, 比特用数字字符串
}

message tbl_accfm
{
	def_accfm_key key = 1;
    string mdname     = 2;
    string maname     = 3;
	
	//固定为down mep
	
    uint32 type           = 4;  // 1: 802.1ag(固定), 2: Y.1731, 0: 未赋值
    uint32 mepid          = 5;
    uint32 rmepid         = 6;
    string rmep_mac       = 7;  // example a0:00:00:ab:00:3a	
    val_interval interval = 8;
	
    enable_sel cfm_enable = 9;
}

message notify_accfm
{
    def_accfm_key key    = 1;
    cfm_event_type event = 2; 
    string deviceid      = 3;     //网元id  		
}

message getall_accfm
{
    int32 return_code       = 1;
    string return_string    = 2;
    repeated tbl_accfm data = 3;
}

//=========================34所独自维护===========================

message response_accfm
{
	int32 return_code    = 1;
	string return_string = 2;
	tbl_accfm data      = 3;
}
